#!/bin/bash

pass=0
total=0
ret=0

test_file="code_test.go"

for pkg in $(go list std); do
    case ${pkg} in
        cmd/*)
            continue
            ;;
        testing)
            continue
            ;;
        *)
            ;;
    esac

    echo -n "${pkg}: "

    echo "package code" > ${test_file}
    echo >> ${test_file}
    echo "import (" >> ${test_file}
    echo -e "\t\"testing\"" >> ${test_file}
    echo -e "\t\"${pkg}\" //mock" >> ${test_file}
    echo >> ${test_file}
    echo -e "\t\"github.com/golang/mock/gomock\"" >> ${test_file}
    echo ")" >> ${test_file}
    echo >> ${test_file}
    echo "func TestMe(t *testing.T) {" >> ${test_file}
    echo -e "\tctrl := gomock.NewController(t)" >> ${test_file}
    echo -e "\tdefer ctrl.Finish()" >> ${test_file}
    echo "}" >> ${test_file}

    output=$("$@" 2>&1)
    if [ "$?" -eq 0 ]; then
        echo "pass"
        (( pass = $pass + 1 ));
    else
        ret=1
        echo "fail"
        echo "----------------------------------------------------"
        echo -e "$output"
        echo "----------------------------------------------------"
    fi
    (( total = $total + 1 ));
done

rm -r ${test_file}

if [ $pass -eq 0 ]; then
    echo -ne "\e[31;1m" >&3
elif [ $pass -eq $total ]; then
    echo -ne "\e[32;1m" >&3
else
    echo -ne "\e[33;1m" >&3
fi
echo -e "${pass}/${total}\e[0m" >&3

exit $ret
