#!/bin/bash

cd "$(dirname "$0")"

ret=0

function check() {
    local ver="$(go version | awk '{print $3}' | awk -F. '{print $2}')"

    if [ -e "$2/.needs" ]; then
        for pkg in $(cat "$2/.needs"); do
            if [ "$(go list -e -f '{{.Incomplete}}' "$pkg")" == "true" ]; then
                echo -ne "\e[35;1mDEPS\e[0m"
                return
            fi
        done
    fi

    if [ $1 -ne 0 ] && [ -e "$2/.uses_c" ] && [ $ver -ge 4 ]; then
        echo -ne "\e[33;1mGO_VERSION\e[0m"
        return
    fi

    if [ -e "$2/.bug" ]; then
	if [ $1 -ne 0 ]; then
            echo -ne "\e[35;1mBUG \e[0m"
	else
            echo -ne "\e[36;1mBUG_PASS\e[0m"
	fi
        return
    fi

    if [ $1 -ne 0 ]; then
        local ignore="WITHMOCK_TEST_IGNORE_${2}"
        if [ -n "${!ignore}" ]; then
            echo -ne "\e[30;1mIGNORE\e[0m"
        else
            echo -ne "\e[31;1mFAIL\e[0m"
            ret=1
        fi
        return
    fi

    echo -ne "\e[32;1mPASS\e[0m"
}

function _do() {
    local name="$1"
    local d="$2"
    if [ -x "${d}/test.${name}" ]; then
        echo "--- ${name} ---" >> test.log
        (cd "$d"; ./test.${name}) >> test.log 2>&1
        check $? "$d"
    else
        echo -ne "\e[33;1mSKIP\e[0m"
    fi
}

if [ $# -gt 0 ]; then
    names=$*
else
    names=$(ls -vd *)
fi

echo -n > test.log

echo -e "\e[33;1mscenarios\e[0m"
echo -e "========="
echo -e "                    withmock\tmocktest"
for d in ${names}; do
    if [ ! -d "${d}" ]; then
        continue
    fi
    printf "%-20s" "${d}:"
    echo "=== ${d} ===" >> test.log
    _do withmock "${d}"
    echo -ne "\t"
    _do mocktest "${d}"
    echo -ne "\n"
done

if [ -z "${WITHMOCK_TEST_MAIN}" ]; then
    echo -ne "\nOverall: "
    if [ $ret -eq 0 ]; then
        echo -e "\e[32;1mPASS\e[0m"
    else
        echo -e "\e[31;1mFAIL\e[0m"
    fi
fi

exit $ret
